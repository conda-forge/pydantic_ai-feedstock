context:
  version: "0.2.4"

recipe:
  name: pydantic_ai
  version: ${{ version }}

source:
  - url: https://github.com/pydantic/pydantic-ai/archive/refs/tags/v${{ version }}.tar.gz
    sha256: 3f074fc0b8180d1411332898b22d70be9670ea980f6d2bf3870730856c5b1b6e

build:
  number: 1

outputs:
  - package:
      name: pydantic-graph
      version: ${{ version }}

    build:
      noarch: python
      script:
        - ${{ PYTHON }} -m pip install ./pydantic_graph/ -vv

    requirements:
      host:
        - python ${{ python_min }}.*
        - pip
        - hatchling
        - uv-dynamic-versioning =0.7.0
      run:
        - python >=${{ python_min }}
        - httpx >=0.27
        - logfire-api >=1.2.0
        - pydantic >=2.10
        - typing-inspection >=0.4.0

    tests:
      - python:
          python_version: ${{ python_min }}.*
          imports:
            - pydantic_graph
          pip_check: true

  - package:
      name: fasta2a
      version: ${{ version }}

    build:
      noarch: python
      script:
        - ${{ PYTHON }} -m pip install ./fasta2a/ -vv

    requirements:
      host:
        - python ${{ python_min }}.*
        - pip
        - hatchling
        - uv-dynamic-versioning =0.7.0
      run:
        - python >=${{ python_min }}
        - starlette >0.29.0
        - pydantic >=2.10
        - opentelemetry-api >=1.28.0

    tests:
      - python:
          python_version: ${{ python_min }}.*
          imports:
            - fasta2a
          pip_check: true

  - package:
      name: pydantic-ai
      version: ${{ version }}

    build:
      noarch: python
      script:
        - ${{ PYTHON }} -m pip install ./pydantic_ai_slim/ -vv

    requirements:
      host:
        - python ${{ python_min }}.*
        - pip
        - hatchling
        - uv-dynamic-versioning =0.7.0
      run:
        - python >=${{ python_min }}
        - eval-type-backport >=0.2.0
        - griffe >=1.3.2
        - httpx >=0.27
        - pydantic >=2.10
        - pydantic-graph =${{ version }}
        - opentelemetry-api >=1.28.0
        - typing-inspection >=0.4.0
        - if: match(python, "<3.11")
          then:
            - exceptiongroup

    tests:
      - python:
          python_version: ${{ python_min }}.*
          imports:
            - pydantic_ai
          pip_check: true

  - package:
      name: pydantic-evals
      version: ${{ version }}

    build:
      noarch: python
      script:
        - ${{ PYTHON }} -m pip install ./pydantic_evals/ -vv

    requirements:
      host:
        - python ${{ python_min }}.*
        - pip
        - hatchling
        - uv-dynamic-versioning =0.7.0
      run:
        - python >=${{ python_min }}
        - pydantic-ai =${{ version }}
        - rich >=13.9.4
        - logfire-api >=1.2.0
        - pydantic >=2.10
        - pyyaml >=6.0.2
        - anyio
        - opentelemetry-sdk
        - if: match(python, "<3.11")
          then:
            - eval-type-backport

    tests:
      - python:
          python_version: ${{ python_min }}.*
          imports:
            - pydantic_evals
          pip_check: true

about:
  homepage: https://ai.pydantic.dev/
  summary: Agent Framework / shim to use Pydantic with LLMs
  documentation: https://ai.pydantic.dev
  license: MIT
  license_file: LICENSE

extra:
  feedstock-name: pydantic_ai
  recipe-maintainers:
    - moritzwilksch
